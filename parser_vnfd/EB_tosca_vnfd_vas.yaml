tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: EB_vAS_LinDaqing
name: vAS_LinDaqing

topology_template:
  node_templates:


    IPS:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 2
        max_instances: 2
        default_instances: 2
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 20 GB
            mem_size: 500 MB
            volume_size: 100 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: vIPS 


    DBSlave:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 1
        max_instances: 1
        default_instances: 1
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 20 GB
            mem_size: 500 MB
            volume_size: 100 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: asbase 


    SMPAgent:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 2
        max_instances: 2
        default_instances: 2
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 20 GB
            mem_size: 500 MB
            volume_size: 100 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: asbase 


    LB:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 2
        max_instances: 2
        default_instances: 2
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 20 GB
            mem_size: 500 MB
            volume_size: 100 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: a10 



    HTTPStack:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 2
        max_instances: 2
        default_instances: 2
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 20 GB
            mem_size: 500 MB
            volume_size: 300 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: HTTPStack_beta3 


    AS_Manager:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 1
        max_instances: 1
        default_instances: 1
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 20 GB
            mem_size: 500 MB
            volume_size: 100 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: AS_Manager_beta3 

  
    DIAFep:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 2
        max_instances: 2
        default_instances: 2
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 20 GB
            mem_size: 500 MB
            volume_size: 300 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: DIAFep_beta3 


 
    SCPAS:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 1
        max_instances: 4
        default_instances: 1
      capabilities:
        host:
          properties:
            num_cpus: 2
            disk_size: 40 GB
            mem_size: 4 GB
            volume_size: 300 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: SCPAS_beta3 

 
    DBMaster:
      type: tosca.nodes.nfv.VDU
      properties:
        min_instances: 1
        max_instances: 1
        default_instances: 1
      capabilities:
        host:
          properties:
            num_cpus: 2
            disk_size: 40 GB
            mem_size: 4 GB
            volume_size: 300 GB
      artifacts:
        VM_image:
          type: tosca.artifacts.Deployment.Image.VM
          file: DBServ_beta3



    IPSCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: IPS 

    IPSCP2:
      type: tosca.nodes.nfv.CP
      properties:
        order: 1
      requirements:
        - virtualLink:
            node: SIP_network 
        - virtualBinding:
            node: IPS 


    DBSlaveCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: DBSlave 



    SMPAgentCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: SMPAgent 

    SMPAgentCP2:
      type: tosca.nodes.nfv.CP
      properties:
        order: 1
      requirements:
        - virtualLink:
            node: OM_network 
        - virtualBinding:
            node: SMPAgent 



    LBCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: LB


    LBCP2:
      type: tosca.nodes.nfv.CP
      properties:
        order: 1
      requirements:
        - virtualLink:
            node: SIP_network 
        - virtualBinding:
            node: LB


    SCPASCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: SCPAS 

    SCPASCP2:
      type: tosca.nodes.nfv.CP
      properties:
        order: 1
      requirements:
        - virtualLink:
            node: SIP_network 
        - virtualBinding:
            node: SCPAS 


    AS_ManagerCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: AS_Manager 

    AS_ManagerCP2:
      type: tosca.nodes.nfv.CP
      properties:
        order: 1
      requirements:
        - virtualLink:
            node: OM_network 
        - virtualBinding:
            node: AS_Manager 


    DIAFepCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: DIAFep 

    DIAFepCP2:
      type: tosca.nodes.nfv.CP
      properties:
        order: 1
      requirements:
        - virtualLink:
            node: SIP_network 
        - virtualBinding:
            node: DIAFep 


    HTTPStackCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: HTTPStack 

    HTTPStackCP2:
      type: tosca.nodes.nfv.CP
      properties:
        order: 1
      requirements:
        - virtualLink:
            node: OM_network 
        - virtualBinding:
            node: HTTPStack 


    DBMasterCP1:
      type: tosca.nodes.nfv.CP
      properties:
        order: 0
      requirements:
        - virtualLink:
            node: Internal_network 
        - virtualBinding:
            node: DBMaster 



    Internal_network:
      type: tosca.nodes.nfv.VL
      properties:
        vendor: ACME Networks
        network_name: provider

    SIP_network:
      type: tosca.nodes.nfv.VL
      properties:
        vendor: ACME Networks
        network_name: provider2 

    IP_network:
      type: tosca.nodes.nfv.VL
      properties:
        vendor: ACME Networks
        network_name: provider3

    OM_network:
      type: tosca.nodes.nfv.VL
      properties:
        vendor: ACME Networks
        network_name: provider3


  VnfManager:
    type: tosca.interface.C10
    properties:
      vdu_node: AS_Manager 
      vm_order: 0
      cp_node: AS_ManagerCP1 
      protocol: http
      verify: False
      port: 9090
      username: vnfm2017 
      password: 1qaz@WSX
 

 


    

#  outputs:
#    RS1_ip:
#      value: { get_attribute: [RS1, private_address] }
#   RS2_ip:
#      value: { get_attribute: [RS2, private_address] }
#    Main_LB_ip:
#      value: { get_attribute: [Main_LB, private_address] }
#    Standby_LB_ip:
#      value: { get_attribute: [Standby_LB, private_address] }
#    MS_Mgr_ip:
#      value: { get_attribute: [MS_Mgr, private_address] }
